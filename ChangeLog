echeck Changelog

2020-11-28  Eric Herman <eric@freesa.org>

	as nice as it can be to have the source in a zillion files,
	that makes it particularly irritating when dealing with
	arduino, so we'll fold things into as few files as reasonable.

	Added:
	* src/eembed.c:
	Deleted:
	* src/eembed-io.c:
	* src/eembed-malloc-free.c:
	* src/eembed-memcmp.c:
	* src/eembed-memcpy.c:
	* src/eembed-memset.c:
	* src/eembed-strcat.c:
	* src/eembed-strcmp.c:
	* src/eembed-strcpy.c:
	* src/eembed-strlen.c:
	* src/eembed-strstr.c:
	* src/eembed-system-alloc.c:

	Modified
	* src/eembed.h:
	* src/eembed-arduino.h:
	Deleted:
	* src/eembed-assert.h:
	* src/eembed-hosted.h:

	Modified:
	* src/echeck.h:
	* src/echeck.c:
	Deleted:
	* src/echeck-err-injecting-malloc.h:
	* src/echeck-err-injecting-malloc.c:

	Added:
	* echeck_arduino_demo/eembed.cpp:
	Deleted:
	* echeck_arduino_demo/eembed-assert.h:
	* echeck_arduino_demo/eembed-hosted.h:
	* echeck_arduino_demo/eembed-io.cpp:
	* echeck_arduino_demo/eembed-strcmp.cpp:
	* echeck_arduino_demo/eembed-strlen.cpp:
	Modified:
	* echeck_arduino_demo/echeck_arduino_demo.ino:

	Added:
	* echeck_tests_arduino/eembed.cpp:
	Deleted:
	* echeck_tests_arduino/eembed-assert.h:
	* echeck_tests_arduino/eembed-hosted.h:
	* echeck_tests_arduino/eembed-io.cpp:
	* echeck_tests_arduino/eembed-strcmp.cpp:
	* echeck_tests_arduino/eembed-strcpy.cpp:
	* echeck_tests_arduino/eembed-strlen.cpp:
	* echeck_tests_arduino/eembed-strstr.cpp:
	Modified:
	* echeck_tests_arduino/echeck_tests_arduino.ino:

	* Makefile.am: to update reflect the new structure
	* tests/test-echeck-private-utils.h: update includes
	* tests/test-eembed-log.c: update includes
	* src/eembed.h: add eembed_malloc / free pointers
	* README: doc that freestanding defaults to no-op
	* configure.ac: 2.0.2
	* Makefile.am: src/eembed-malloc-free.c

2020-11-27  Eric Herman <eric@freesa.org>

	extract E(asy)Embed for E(asy)Check 2.0.0

	Renamed "struct echeck_log" -> "struct eembed_log"
	Added the "eembed.h" for printing and platform extractions.
	Provide "eembed-hosted.h" for use in tests.

	Add function pointers for essential functions. These functions
	default to the ones from the standard C library, but simple, if
	inefficient, alternatives are provided for freestanding use.

	Most of these were essential copy-pasted from eh-no-libc or
	other projects which support arduino, including this and:
		https://github.com/ericherman/eh-no-libc
		https://github.com/ericherman/dumb-alloc
		https://github.com/ericherman/libdeque
		https://github.com/ericherman/libeba
		https://github.com/ericherman/libehbigint
		https://github.com/ericherman/libehht
		https://github.com/ericherman/libehstr

	* src/eembed.h: platform abstractions
	* src/echeck.h: remove platform abstractions
	* src/eembed-hosted.h: macros for establishing EEMBED_HOSTED

	* src/echeck.c: kill platform-io and echeck_diy_strcmp
	* src/echeck-arduino.cpp -> src/eembed-arduino.cpp
	* src/echeck-arduino.h -> src/eembed-arduino.h
	* src/eembed-arduino.cpp <- src/echeck-arduino.cpp
	* src/eembed-arduino.h <- src/echeck-arduino.h
	* src/eembed-io.c: move the platform-io code here
	* src/eembed-memcmp.c:
	* src/eembed-memcpy.c:
	* src/eembed-memset.c: used to zero buffers
	* src/eembed-strcat.c:
	* src/eembed-strcmp.c: used in echeck.c, tests
	* src/eembed-strcpy.c: used in eembed-io.c
	* src/eembed-strlen.c: used in tests
	* src/eembed-strstr.c: used in tests

	* README: breakout the EEmbed section
	* Makefile.am: support both libraries
	* configure.ac: support --enable-faux-freestanding

	* tests/test-echeck-private-utils.h: remove platform stuff
	* tests/test-echeck-private-utils.c: move "diy" funcs to eembed
	* tests/test-eembed-log.c: simple test of "struct eembed_log"
	* tests/test_check_byte_array.c: use "eembed_log", MAIN
	* tests/test_check_byte_array_m.c:
	* tests/test_check_char.c
	* tests/test_check_char_m.c
	* tests/test_check_double.c
	* tests/test_check_int.c
	* tests/test_check_int_m.c
	* tests/test_check_long.c
	* tests/test_check_long_m.c
	* tests/test_check_ptr.c
	* tests/test_check_ptr_m.c
	* tests/test_check_size_t.c
	* tests/test_check_size_t_m.c
	* tests/test_check_status.c
	* tests/test_check_str.c
	* tests/test_check_str_m.c
	* tests/test_check_str_null_ptr.c
	* tests/test_check_unsigned_int.c
	* tests/test_check_unsigned_int_m.c
	* tests/test_check_unsigned_long.c
	* tests/test_check_unsigned_long_m.c
	* tests/test_hosted.c: support faux-freestanding

	* echeck_arduino_demo/echeck-arduino.cpp
	* echeck_arduino_demo/echeck_arduino_demo.ino
	* echeck_arduino_demo/echeck-arduino.h
	* echeck_arduino_demo/eembed-arduino.cpp
	* echeck_arduino_demo/eembed-arduino.h
	* echeck_arduino_demo/eembed.h
	* echeck_arduino_demo/eembed-hosted.h
	* echeck_arduino_demo/eembed-io.cpp
	* echeck_arduino_demo/eembed-strcmp.cpp
	* echeck_arduino_demo/eembed-strlen.cpp
	* echeck_tests_arduino/echeck-arduino.cpp
	* echeck_tests_arduino/echeck-arduino.h
	* echeck_tests_arduino/echeck_tests_arduino.ino
	* echeck_tests_arduino/eembed-arduino.cpp
	* echeck_tests_arduino/eembed-arduino.h
	* echeck_tests_arduino/eembed.h
	* echeck_tests_arduino/eembed-hosted.h
	* echeck_tests_arduino/eembed-io.cpp
	* echeck_tests_arduino/eembed-strcmp.cpp
	* echeck_tests_arduino/eembed-strcpy.cpp
	* echeck_tests_arduino/eembed-strlen.cpp
	* echeck_tests_arduino/eembed-strstr.cpp
	* echeck_tests_arduino/test-eembed-log.cpp


2020-10-09  Eric Herman <eric@freesa.org>

	2.0.0 API Breaking changes:
	- Change the return type from int to unsigned char.
	- Replace printf usage with a logger object.
	- Replace all of the fcheck macros with lcheck macros.

	Merged 'support-freestanding' branch, including:
	- New echeck_arduino_demo example firmware
	- new echeck self-tests as arduino firmware
	- Add test_hosted for covering default printf usage

	Fixed the check_double_scaled_epsilon macros by removing the ';'

	* src/echeck.h
	* src/echeck.c
	* .gitignore
	* ChangeLog
	* Makefile.am
	* README
	* configure.ac
	* echeck_arduino_demo/echeck.cpp
	* echeck_arduino_demo/echeck.h
	* echeck_arduino_demo/echeck_arduino_demo.ino
	* echeck_tests_arduino/echeck.cpp
	* echeck_tests_arduino/echeck.h
	* echeck_tests_arduino/echeck_tests_arduino.ino
	* echeck_tests_arduino/test-echeck-private-utils.cpp
	* echeck_tests_arduino/test-echeck-private-utils.h
	* echeck_tests_arduino/test_check_byte_array.cpp
	* echeck_tests_arduino/test_check_byte_array_m.cpp
	* echeck_tests_arduino/test_check_char.cpp
	* echeck_tests_arduino/test_check_char_m.cpp
	* echeck_tests_arduino/test_check_double.cpp
	* echeck_tests_arduino/test_check_int.cpp
	* echeck_tests_arduino/test_check_int_m.cpp
	* echeck_tests_arduino/test_check_long.cpp
	* echeck_tests_arduino/test_check_long_m.cpp
	* echeck_tests_arduino/test_check_ptr.cpp
	* echeck_tests_arduino/test_check_ptr_m.cpp
	* echeck_tests_arduino/test_check_size_t.cpp
	* echeck_tests_arduino/test_check_size_t_m.cpp
	* echeck_tests_arduino/test_check_status.cpp
	* echeck_tests_arduino/test_check_str.cpp
	* echeck_tests_arduino/test_check_str_m.cpp
	* echeck_tests_arduino/test_check_str_null_ptr.cpp
	* echeck_tests_arduino/test_check_unsigned_int.cpp
	* echeck_tests_arduino/test_check_unsigned_int_m.cpp
	* echeck_tests_arduino/test_check_unsigned_long.cpp
	* echeck_tests_arduino/test_check_unsigned_long_m.cpp
	* tests/test-echeck-private-utils.c
	* tests/test-echeck-private-utils.h
	* tests/test_check_byte_array.c
	* tests/test_check_byte_array_m.c
	* tests/test_check_char.c
	* tests/test_check_char_m.c
	* tests/test_check_double.c
	* tests/test_check_int.c
	* tests/test_check_int_m.c
	* tests/test_check_long.c
	* tests/test_check_long_m.c
	* tests/test_check_ptr.c
	* tests/test_check_ptr_m.c
	* tests/test_check_size_t.c
	* tests/test_check_size_t_m.c
	* tests/test_check_status.c
	* tests/test_check_str.c
	* tests/test_check_str_m.c
	* tests/test_check_str_null_ptr.c
	* tests/test_check_unsigned_int.c
	* tests/test_check_unsigned_int_m.c
	* tests/test_check_unsigned_long.c
	* tests/test_check_unsigned_long_m.c
	* tests/test_hosted.c


2020-03-15  Eric Herman <eric@freesa.org>
	Avoid POSIX undefined behavior of printing to stderr before
	flushing stdout

	https://pubs.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html#tag_15_05_01

	* src/echeck.c: fflush(stdout) before writing to stderr

2020-02-20  Eric Herman <eric@freesa.org>

Added test lcov reporting

	* .gitignore: coverage files
	* Makefile.am: coverage if DEBUG, parallel valgrind
	* configure.ac: --enable-debug
	* src/echeck.c: extract echeck_ensure_stream
	* src/echeck.h: echeck_ensure_stream
	* tests/test_check_byte_array_m.c: test different lengths


2019-08-20  Eric Herman <eric@freesa.org>

	switch to "SPDX-License-Identifier: LGPL-3.0-or-later"

2019-01-25  Eric Herman <eric@freesa.org>

	* src/echeck.h: use defines for the CPP friendliness
	* misc/pre-tidy.patch: no longer needed
	* Makefile.am: no pre-tidy; misc directory no longer exists

2017-06-22  Eric Herman <eric@freesa.org>

	Added the "check_double_scaled_epsilon" family of defines.
	The epsilon is scaled relative to the "expected" value - be
	careful if the value passed in as "expected" has side effects,
	as this value is repeated in the #define.

	* src/echeck.h: add the "check_double_scaled_epsilon" family
	* tests/test_check_double.c: call the function
	* misc/pre-tidy.patch: respin

2017-09-08  Eric Herman <eric@freesa.org>

	Add check_double(actual, expected, epsilon)

	* src/echeck.h: prototype
	* src/echeck.c: impl
	* tests/test_check_double.c: some basic checks
	* misc/pre-tidy.patch: respin
	* Makefile.am: add test
	* .gitignore: add test

2017-09-07  Eric Herman <eric@freesa.org>

	pass "const char **" for lists of constant strings

2016-06-16  Eric Herman <eric@freesa.org>

	LGPLv3+ friendly structure

	* src/echeck.h: boilerplate LGPLv3+
	* src/echeck.c: boilerplate LGPLv3+
	* README: new file name/locations
	* Makefile.am: include COPYING.GPL3
	* misc/gpl-3.0.txt: renamed to COPYING.GPL3
	* misc/lgpl-3.0.txt: renamed to COPYING
	* COPYING: renamed from misc/lgpl-3.0.txt
	* COPYING.GPL3: renamed from misc/gpl-3.0.txt

2016-06-16  Eric Herman <eric@freesa.org>

	* COPYING: boilerplate LGPLv3+
	* README: reference misc/
	* Makefile.am: include misc/
	* COPYING.GPL3: renamed misc/gpl-3.0.txt
	* COPYING.LGPL3: renamed misc/lgpl-3.0.txt

2016-06-14  Eric Herman <eric@freesa.org>

	* src/echeck.h: make nice for c++
	* misc/pre-tidy.patch: comment out block before running indent
	* Makefile.am: update "make tidy"

2016-06-06  Eric Herman <eric@freesa.org>

	(unsigned) int checks now use long check code.

	WARNING: This breaks ABI, remains source compatible

	* src/echeck.h: factor together int and long
	* src/echeck.c: same
	* tests/test_check_unsigned_int.c: -1 unsigned now a unsigned long

2016-06-05  Eric Herman <eric@freesa.org>

	* src/echeck.c: check_str now handles NULL reasonably
	* tests/test_check_str_null_ptr.c: add test for NULL
	* Makefile.am: add new test
	* .gitignore: ignore new test

2016-05-22  Eric Herman <eric@freesa.org>

	Added "echeck_status" function and updated tests.
	The "check_status" functions allow returning error counts exit codes.
	Values larger than 127 or smaller than -128 will be capped.
	Thus, a value of 256 for instance, will not return EXIT_SUCCESS.

	Changed the test headers to include "../src/echeck.h" so they do not
	find the system installed <echeck.h>; I expect there is a better way
	to do this.

	* README: add "check_status" text
	* src/echeck.h: add "echeck_status" and relatives
	* src/echeck.c: add "echeck_status" impl
	* Makefile.am: add "test_check_status", reduce LDADD duplication
	* tests/test_check_status.c: new test, (does not use 'check_status')
	* tests/test_check_byte_array.c: header, returns check_status(failures)
	* tests/test_check_byte_array_m.c: (also)
	* tests/test_check_char.c: (also)
	* tests/test_check_char_m.c: (also)
	* tests/test_check_int.c: (also)
	* tests/test_check_int_m.c: (also)
	* tests/test_check_long.c: (also)
	* tests/test_check_long_m.c: (also)
	* tests/test_check_ptr.c: (also)
	* tests/test_check_ptr_m.c: (also)
	* tests/test_check_size_t.c: (also)
	* tests/test_check_size_t_m.c: (also)
	* tests/test_check_str.c: (also)
	* tests/test_check_str_m.c: (also)
	* tests/test_check_unsigned_int.c: (also)
	* tests/test_check_unsigned_int_m.c: (also)
	* tests/test_check_unsigned_long.c: (also)
	* tests/test_check_unsigned_long_m.c: (also)
	* .gitignore: add new test


2016-05-21  Eric Herman <eric@freesa.org>

	move source files into src/ and tests/ subdirs
	break test-echeck.c into many individual tests
	default to stderr if FILE *err is NULL

2016-05-16  Eric Herman <eric@freesa.org>

	* tagging as release version 1.0.0

	* Makefile: replaceing with Makefile.am and configure.ac
	* ChangeLog: Freshly created ChangeLog.
